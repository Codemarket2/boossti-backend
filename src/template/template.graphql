type Query {
  getTemplates(page: Int, limit: Int, active: Boolean, search: String): Templates
  getMenuTemplates: [Template]
  getTemplateInstances(
    page: Int
    limit: Int
    active: Boolean
    search: String
    template: ID
  ): TemplateInstances @aws_api_key @aws_cognito_user_pools
  getTemplate(_id: ID!): Template
  getTemplateInstance(_id: ID!): TemplateInstance
  getTemplateBySlug(slug: String!): Template @aws_api_key @aws_cognito_user_pools
  getTemplateInstanceBySlug(slug: String!): TemplateInstance @aws_api_key @aws_cognito_user_pools
  getMentionItems(search: String): [MentionItems]
  getTemplateInstanceMentions(
    _id: ID!
    page: Int
    limit: Int
    active: Boolean
    search: String
  ): TemplateInstances
}

type Mutation {
  createTemplate(
    title: String!
    description: String
    media: [MediaInput]
    fields: [FieldInput!]
  ): Template
  updateTemplate(
    _id: ID!
    title: String
    description: String
    slug: String
    media: [MediaInput]
    fields: [FieldInput]
    active: Boolean
    showInMenu: Boolean
    options: AWSJSON
  ): Template
  deleteTemplate(_id: ID!): String
  createTemplateInstance(
    template: ID!
    title: String!
    description: String
    media: [MediaInput]
    active: Boolean
  ): TemplateInstance
  updateTemplateInstance(
    _id: ID!
    template: ID
    title: String
    slug: String
    description: String
    media: [MediaInput]
    fields: [FieldInput]
    active: Boolean
    authenticateUser: Boolean
    options: AWSJSON
    values: [ValueInput]
  ): TemplateInstance
  deleteTemplateInstance(_id: ID!): String
}

type Subscription {
  addedTemplate: Template @aws_subscribe(mutations: ["createTemplate", "updateTemplate"])
  updatedTemplate(_id: ID!): Template @aws_subscribe(mutations: ["updateTemplate"])
  addedTemplateInstance: TemplateInstance
    @aws_subscribe(mutations: ["createTemplateInstance", "updateTemplateInstance"])
  updatedTemplateInstance(_id: ID!): TemplateInstance
    @aws_subscribe(mutations: ["updateTemplateInstance"])
}

type Templates {
  data: [Template]
  count: Int
}

type Template @aws_api_key @aws_cognito_user_pools {
  _id: ID
  title: String
  slug: String
  description: String
  media: [Media]
  fields: [Field2]
  active: Boolean
  inUse: Boolean
  showInMenu: Boolean
  options: AWSJSON
  createdAt: AWSDateTime
  createdBy: Response
}

type TemplateInstances @aws_api_key @aws_cognito_user_pools {
  data: [TemplateInstance]
  count: Int
}

type MentionItems {
  title: String
  _id: ID
  category: String
  type: String
}

type TemplateInstance @aws_api_key @aws_cognito_user_pools {
  _id: ID
  # title: String
  # slug: String
  # description: String
  # media: [Media]
  authenticateUser: Boolean
  active: Boolean
  fields: [Field2]
  template: Template
  options: AWSJSON
  createdBy: User
  createdAt: AWSDateTime
  values: [Value]
}
