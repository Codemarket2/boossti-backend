directive @aws_subscribe(mutations: [String!]!) on FIELD_DEFINITION
directive @aws_cognito_user_pools(cognito_groups: [String]) on OBJECT | FIELD_DEFINITION
directive @aws_api_key on OBJECT | FIELD_DEFINITION

scalar AWSDateTime
scalar AWSJSON

type Media @aws_api_key @aws_cognito_user_pools {
  url: String
  caption: String
}

type Field2 @aws_api_key @aws_cognito_user_pools {
  _id: ID
  label: String
  fieldType: String
  options: AWSJSON
  template: Template
  form: Form
}

type Form @aws_api_key @aws_cognito_user_pools {
  _id: ID!
  name: String
  slug: String
  fields: [Field2]
  settings: AWSJSON
  published: Boolean
  createdBy: Response
  updatedBy: ID
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

type Value @aws_api_key @aws_cognito_user_pools {
  _id: ID
  field: String
  value: String
  valueNumber: Float
  valueBoolean: Boolean
  valueDate: AWSDateTime
  media: [Media]
  values: [String]
  template: Template
  page: Page
  form: Form
  response: Response
  options: AWSJSON
}

type User @aws_api_key @aws_cognito_user_pools {
  _id: ID!
  userId: String!
  name: String!
  email: String!
  picture: String
  active: Boolean!
  confirmed: Boolean!
  createdAt: String
  createdBy: String
  updatedAt: String
  updatedBy: String
}

type Response @aws_api_key @aws_cognito_user_pools {
  _id: ID
  count: Int
  formId: ID
  appId: ID
  parentResponseId: ID
  workflowId: ID
  values: [Value]
  options: AWSJSON
  createdBy: Response
  updatedBy: ID
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

type Query {
  getTemplates(page: Int, limit: Int, active: Boolean, search: String): Templates
  getMenuTemplates: [Template]
  getPages(page: Int, limit: Int, active: Boolean, search: String, template: ID): Pages
    @aws_api_key
    @aws_cognito_user_pools
  getTemplate(_id: ID!): Template
  getPage(_id: ID!): Page
  getTemplateBySlug(slug: String!): Template @aws_api_key @aws_cognito_user_pools
  getPageBySlug(slug: String!): Page @aws_api_key @aws_cognito_user_pools
  getMentionItems(search: String): [MentionItems]
  getPageMentions(_id: ID!, page: Int, limit: Int, active: Boolean, search: String): Pages
}

input MediaInput {
  url: String
  caption: String
}

input ValueInput {
  _id: ID
  field: String
  value: String
  valueNumber: Float
  valueBoolean: Boolean
  valueDate: AWSDateTime
  media: [MediaInput]
  values: [String]
  template: ID
  page: ID
  form: ID
  response: ID
  options: AWSJSON
}

input FieldInput {
  _id: ID
  label: String!
  fieldType: String!
  options: AWSJSON
  template: ID
  form: ID
}

type Mutation {
  createTemplate(
    title: String!
    description: String
    media: [MediaInput]
    fields: [FieldInput!]
  ): Template
  updateTemplate(
    _id: ID!
    title: String
    description: String
    slug: String
    media: [MediaInput]
    fields: [FieldInput]
    active: Boolean
    showInMenu: Boolean
    options: AWSJSON
  ): Template
  deleteTemplate(_id: ID!): String
  createPage(
    template: ID!
    title: String!
    description: String
    media: [MediaInput]
    active: Boolean
  ): Page
  updatePage(
    _id: ID!
    template: ID
    title: String
    slug: String
    description: String
    media: [MediaInput]
    fields: [FieldInput]
    active: Boolean
    authenticateUser: Boolean
    options: AWSJSON
    values: [ValueInput]
  ): Page
  deletePage(_id: ID!): String
}

type Subscription {
  addedTemplate: Template @aws_subscribe(mutations: ["createTemplate", "updateTemplate"])
  updatedTemplate(_id: ID!): Template @aws_subscribe(mutations: ["updateTemplate"])
  addedPage: Page @aws_subscribe(mutations: ["createPage", "updatePage"])
  updatedPage(_id: ID!): Page @aws_subscribe(mutations: ["updatePage"])
}

type Templates {
  data: [Template]
  count: Int
}

type Template @aws_api_key @aws_cognito_user_pools {
  _id: ID
  title: String
  slug: String
  description: String
  media: [Media]
  fields: [Field2]
  active: Boolean
  inUse: Boolean
  showInMenu: Boolean
  options: AWSJSON
  createdAt: AWSDateTime
  createdBy: Response
}

type Pages @aws_api_key @aws_cognito_user_pools {
  data: [Page]
  count: Int
}

type MentionItems {
  title: String
  _id: ID
  category: String
  type: String
}

type Page @aws_api_key @aws_cognito_user_pools {
  _id: ID
  title: String
  slug: String
  authenticateUser: Boolean
  description: String
  active: Boolean
  media: [Media]
  fields: [Field2]
  template: Template
  options: AWSJSON
  createdBy: User
  createdAt: AWSDateTime
  values: [Value]
}
