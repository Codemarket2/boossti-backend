type Query {
  getResponse(_id: ID!, appId: ID): Response @aws_api_key @aws_cognito_user_pools
  getResponseByCount(formId: ID!, count: Int!, appId: ID): Response
    @aws_api_key
    @aws_cognito_user_pools
  getResponses(
    formId: ID!
    appId: ID
    parentResponseId: ID
    workflowId: ID
    page: Int
    limit: Int
    search: String
    formField: ID
    onlyMy: Boolean
    valueFilter: AWSJSON
  ): Responses @aws_api_key @aws_cognito_user_pools
  getMyResponses(page: Int, limit: Int): Responses2
  getCheckUnique(formId: ID!, responseId: ID, valueFilter: AWSJSON!, appId: ID): String
    @aws_api_key
    @aws_cognito_user_pools
  checkPermission(
    actionType: actionType
    modelType: modelType
    formId: ID
    responseId: ID
    appId: ID
  ): Boolean
}

enum actionType {
  CREATE
  VIEW
  EDIT
  DELETE
}

enum modelType {
  Form
  Response
  Comment
}

type Mutation {
  createResponse(
    formId: ID!
    appId: ID
    parentResponseId: ID
    workflowId: ID
    values: [ValueInput]
    options: AWSJSON
  ): Response @aws_api_key @aws_cognito_user_pools
  updateResponse(_id: ID!, formId: ID, values: [ValueInput]): Response
    @aws_api_key
    @aws_cognito_user_pools
  deleteResponse(_id: ID!): ID! @aws_api_key @aws_cognito_user_pools
  createBulkResponses(
    formId: ID!
    fileUrl: String!
    map: AWSJSON!
    parentId: ID
    fileData: AWSJSON
  ): Boolean
  resolveCondition(responseId: ID!, conditions: AWSJSON!): Boolean
  checkUniqueBetweenMultipleValues(responseIds: [ID!], subField: AWSJSON!): Boolean
}

type Subscription {
  responseSub(formId: ID): Response @aws_subscribe(mutations: ["createResponse", "updateResponse"])
  updatedResponse(_id: ID!): Response @aws_subscribe(mutations: ["updateResponse"])
  deletedResponse: ID @aws_subscribe(mutations: ["deleteResponse"])
  feedDeleteSub: ID @aws_subscribe(mutations: ["deleteForm", "deleteResponse", "deleteComment"])
}

type Value @aws_api_key @aws_cognito_user_pools {
  _id: ID
  field: String
  value: String
  valueNumber: Float
  valueBoolean: Boolean
  valueDate: AWSDateTime
  media: [Media]
  values: [String]
  template: Template
  page: Page
  form: Form
  response: Response
  options: AWSJSON
}

input ValueInput {
  _id: ID
  field: String
  value: String
  valueNumber: Float
  valueBoolean: Boolean
  valueDate: AWSDateTime
  media: [MediaInput]
  values: [String]
  template: ID
  page: ID
  form: ID
  response: ID
  options: AWSJSON
}

type Response @aws_api_key @aws_cognito_user_pools {
  _id: ID
  count: Int
  formId: ID
  appId: ID
  parentResponseId: ID
  workflowId: ID
  values: [Value]
  options: AWSJSON
  createdBy: Response
  updatedBy: ID
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

type Response2 @aws_api_key @aws_cognito_user_pools {
  _id: ID
  count: Int
  formId: Form
  appId: ID
  parentResponseId: ID
  workflowId: ID
  values: [Value]
  createdBy: Response
  updatedBy: ID
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

type Responses @aws_api_key @aws_cognito_user_pools {
  count: Int
  data: [Response]
}
type Responses2 {
  count: Int
  data: [Response2]
}
